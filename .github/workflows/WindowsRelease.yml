# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./LucentOsc.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  Upload-Release:
    runs-on: ubuntu-18.04
    needs: build-windows
    steps:
        - uses: actions/checkout@v1
        - name: create release
        id: create_release
        uses: actions/create-release@master
        env:
            GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            draft: false
            prerelease: false
        - name: download artifacts
          uses: actions/download-artifact@v1
          with:
            name: uploads
        - name: upload windows
          id: upload-windows
          uses: actions/upload-release-asset@v1.0.1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./uploads/Windows_Release.zip
            asset_name: Windows_Release.zip
            asset_content_type: application/zip

  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Generate
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: ./Generate.bat

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
      
    - name: zip win artifact
      run: |
        powershell Compress-Archive ./bin windows.zip 
    
    - name: upload windows artifact
      uses: actions/upload-artifact@v1
      with:
        name: uploads
        path: Windows_Release.zip